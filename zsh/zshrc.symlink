# system-wide environment settings for zsh(1)
if [ -x /usr/libexec/path_helper ]; then
  eval `/usr/libexec/path_helper -s`
fi

plugins=(apparix fleetctl docker-machine)

# vim shortcuts
bindkey -v
# Remove the vim mode timeout
export KEYTIMEOUT=1

# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

export EDITOR=vim


# your project folder that we can `c [tab]` to
export PROJECTS=~/Development

source $DOTFILES/zsh/antigen/antigen.zsh

# Antigen
# Bundles from oh-my-zsh
antigen bundles <<EOBUNDLES
# oh-my-zsh plugins
aws
git
git-extras
extract
bundler
docker
docker-compose
knife
extract
tmux
vagrant
node
nvm
command-not-found
gem
osx

# other plugins
zsh-users/zsh-syntax-highlighting
Tarrasch/zsh-bd
EOBUNDLES

antigen apply

# source every .zsh file in this rep
for config_file ($DOTFILES/zsh/*.zsh) do
  source $config_file
done

# Load the theme
# export ZSH_THEME="smg"
# source "$DOTFILES/zsh/themes/$ZSH_THEME.zsh-theme"

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

export LC_CTYPE=en_US.UTF-8

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U promptinit && promptinit
autoload colors && colors
autoload -U compinit && compinit
autoload -z edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

prompt smgt

# Load all of the plugins that were defined in ~/.zshrc
for plugin ($plugins); do
  if [ -f $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh ]; then
    source $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh
  elif [ -f $ZSH/plugins/$plugin/$plugin.plugin.zsh ]; then
    source $ZSH/plugins/$plugin/$plugin.plugin.zsh
  fi
done

#type fortune &> /dev/null && echo && fortune|lolcat && echo

# added by travis gem
[ -f /Users/simon/.travis/travis.sh ] && source /Users/simon/.travis/travis.sh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
